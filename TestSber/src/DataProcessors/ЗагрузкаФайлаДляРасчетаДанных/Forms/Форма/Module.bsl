#Область ОписаниеПеременных
#КонецОбласти
#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	Сообщить(ТекущаяДата());
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтотОбъект);
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов("Выберите файл", Ложь, "*.csv");
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении, , , , ПараметрыДиалога, УникальныйИдентификатор);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(ОписаниеПомещенногоФайла, Дополнительно) Экспорт
	Если ОписаниеПомещенногоФайла<>Неопределено Тогда
		ЗапуститьОбработкуНаСервере(ОписаниеПомещенногоФайла.Адрес,Ограничение);	
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапуститьОбработкуНаСервере(Адрес,Ограничение)
	ОбработкаФайла(Адрес,Ограничение);
	
	//НаборПараметров = Новый Массив;
	//НаборПараметров.Добавить(Адрес);
	//Задание = ФоновыеЗадания.Выполнить("ОбщийМодульФоновые.ЗапускЗагрузкиФайла", НаборПараметров);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанные(Команда)
	УдалитьДанныеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьДанныеНаСервере()
	ДатаН = "2022-07-26";
	ВремяН = "17:37:39";
	ДатаК = "2022-07-27";
	ВремяК = "17:27:39";
	СтартДата = Дата(СтрЗаменить(ДатаН, "-", "") + СтрЗаменить(ВремяН, ":", ""));
	КонецДата = Дата(СтрЗаменить(ДатаК, "-", "") + СтрЗаменить(ВремяК, ":", ""));
	НаборЗаписей = РегистрыСведений.ДанныеДляРасчета.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
КонецПроцедуры

Функция ОбработкаСтроки()
	
	Возврат 1;
КонецФункции
&НаСервереБезКонтекста
Функция ОбработкаФайла(АдресФайла,Ограничение)
	
	ДанныеДокумента = ПолучитьИзВременногоХранилища(АдресФайла);
	ИмяФайла = ПолучитьИмяВременногоФайла("csv");
	ДанныеДокумента.Записать(ИмяФайла);
	ТЗ=ПрочитатьCSVвТЗ(ИмяФайла,Ограничение);
	//	ВремяНачала = ТекущаяДата();
	
	СоответствиеКодовОбработки = Новый Соответствие;
	СоответствиеКодовОбработки.Вставить("МГТ", Перечисления.ТипыГрузовыхМест.МГТ);
	СоответствиеКодовОбработки.Вставить("КГТ", Перечисления.ТипыГрузовыхМест.КГТ);
	СоответствиеКодовОбработки.Вставить("Хаб", Перечисления.ТипыГрузовыхМест.Хаб);
	СоответствиеКодовОбработки.Вставить("Шины", Перечисления.ТипыГрузовыхМест.Шины);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныТарифовОпераций.Период КАК Период,
	|	ЦеныТарифовОпераций.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныТарифовОпераций КАК ЦеныТарифовОпераций
	|ГДЕ
	|	ЦеныТарифовОпераций.ВидОперации = &ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОпераций.Хранение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТарифыХранения = Новый ТаблицаЗначений;
	ТарифыХранения.Колонки.Добавить("Сумма",				    Новый ОписаниеТипов("Число"));
	ТарифыХранения.Колонки.Добавить("ДатаНачала",				Новый ОписаниеТипов("Дата"));
	ТарифыХранения.Колонки.Добавить("ДатаОкончания",			Новый ОписаниеТипов("Дата"));
	
	ПредыдущаяДата=0;
	Индекс = -1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПредыдущаяДата<>ВыборкаДетальныеЗаписи.Период Тогда 
			Если ПредыдущаяДата=0 Тогда
				НоваяСтрока = ТарифыХранения.Добавить(); 
				НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период; 
				НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
				Индекс=Индекс+1; 
				ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;
			Иначе           
				НоваяСтрока = ТарифыХранения.Добавить();
				НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период;  
				НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
				ТарифыХранения[Индекс].ДатаОкончания = ВыборкаДетальныеЗаписи.Период; 
				Индекс=Индекс+1; 
				ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;  
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;  
	ТарифыХранения[Индекс].ДатаОкончания = Дата(2050,1,1); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныТарифовОпераций.Период КАК Период,
	|	ЦеныТарифовОпераций.Цена КАК Цена,
	|	ЦеныТарифовОпераций.ТипГрузовогоМеста КАК ТипГрузовогоМеста
	|ИЗ
	|	РегистрСведений.ЦеныТарифовОпераций КАК ЦеныТарифовОпераций
	|ГДЕ
	|	ЦеныТарифовОпераций.ВидОперации = &ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ТипГрузовогоМеста
	|ИТОГИ ПО
	|	ТипГрузовогоМеста";
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОпераций.Обработка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТипаГМ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТарифыОбработки = Новый ТаблицаЗначений;
	ТарифыОбработки.Колонки.Добавить("ТипГрузовогоМеста",	    Новый ОписаниеТипов("ПеречислениеСсылка.ТипыГрузовыхМест"));  
	ТарифыОбработки.Колонки.Добавить("Сумма",				    Новый ОписаниеТипов("Число"));
	ТарифыОбработки.Колонки.Добавить("ДатаНачала",				Новый ОписаниеТипов("Дата"));
	ТарифыОбработки.Колонки.Добавить("ДатаОкончания",			Новый ОписаниеТипов("Дата"));
	
	Индекс = -1;
	Пока ВыборкаТипаГМ.Следующий() Цикл    
		ВыборкаДетальныеЗаписи = ВыборкаТипаГМ.Выбрать();    
		ПредыдущаяДата=0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			Если ПредыдущаяДата<>ВыборкаДетальныеЗаписи.Период Тогда 
				Если ПредыдущаяДата=0 Тогда
					НоваяСтрока = ТарифыОбработки.Добавить();  
					НоваяСтрока.ТипГрузовогоМеста = ВыборкаДетальныеЗаписи.ТипГрузовогоМеста; 
					НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период; 
					НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
					Индекс=Индекс+1; 
					ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;
				Иначе           
					НоваяСтрока = ТарифыОбработки.Добавить();
					НоваяСтрока.ТипГрузовогоМеста = ВыборкаДетальныеЗаписи.ТипГрузовогоМеста;
					НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период;  
					НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
					ТарифыОбработки[Индекс].ДатаОкончания = ВыборкаДетальныеЗаписи.Период; 
					Индекс=Индекс+1; 
					ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;  
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;     
		ТарифыОбработки[Индекс].ДатаОкончания = Дата(2050,1,1);
	КонецЦикла;	
	
	ЧислоПотоков = 8;
	ЧислоСтрокВТаблице = ТЗ.Количество();
	РазмерПорции = Цел(ЧислоСтрокВТаблице / ЧислоПотоков);
	МассивЗаданий = Новый Массив;     
	//Для ТекСтрока = 0 По КоличествоВПакете-1 Цикл
	//			МассивСтрок.Добавить(Данные[ТекСтрока]);
	//КонецЦикла;
	//ДанныхСтрок = Данные.Скопировать(МассивСтрок);
	
	Для НомерПотока = 1 По ЧислоПотоков Цикл
		ИндексНачала = (НомерПотока - 1) * РазмерПорции;
		Если (НомерПотока = ЧислоПотоков) Тогда
			РазмерПорции = ЧислоСтрокВТаблице - (ЧислоПотоков * РазмерПорции) + РазмерПорции;
		КонецЕсли;
		// определяем массив параметров для процедуры
		НаборПараметров = Новый Массив;
		НаборПараметров.Добавить(ТЗ);
		НаборПараметров.Добавить(СоответствиеКодовОбработки);   
		НаборПараметров.Добавить(ТарифыХранения);
		НаборПараметров.Добавить(ТарифыОбработки);
		НаборПараметров.Добавить(ИндексНачала);
		НаборПараметров.Добавить(РазмерПорции);
		// запуск фонового задания
		Задание = ФоновыеЗадания.Выполнить("ОбщийМодульФоновые.ОбработкаДанных", НаборПараметров);
		// добавляем задание в массив, чтобы потом отследить выполнение
		МассивЗаданий.Добавить(Задание);
	КонецЦикла;
	// проверим результат выполнения фоновых заданий
	Если МассивЗаданий.Количество() > 0 Тогда
		Попытка
			ФоновыеЗадания.ОжидатьЗавершенияВыполнения(МассивЗаданий, 10);
		Исключение
			Возврат 1;
		КонецПопытки;
	КонецЕсли;
	//Длительность = ТекущаяДата() - ВремяНачала;
	//Сообщить("Длительность: " + Длительность + "сек.");
	УдалитьИзВременногоХранилища(АдресФайла);
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
	КонецПопытки;
	
	Возврат 1;
КонецФункции

&НаСервереБезКонтекста
Функция ПрочитатьCSVвТЗ(ИмяФайла,Ограничение,Разделитель = ",")    
	МаксСтрок = ?(Ограничение=0,10000000000000,Ограничение);	
	КодировкаФайла 	= КодировкаТекста.UTF8;
	Результат = Новый ТаблицаЗначений;
	Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаФайла);
	
	// создадим колонки
	ТекСтрока = Текст.ПрочитатьСтроку();
	Если ТекСтрока <> Неопределено Тогда
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		Для Каждого ИмяКолонки Из МассивЗначений Цикл
			Результат.Колонки.Добавить(СтрЗаменить(ИмяКолонки, """", ""));
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла;
		ТекСтрока = Текст.ПрочитатьСтроку();
	КонецЕсли;
	
	Пока ТекСтрока <> Неопределено Цикл
		НоваяСтрока = Результат.Добавить();
		
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		Для Каждого ТекЗначение Из МассивЗначений Цикл
			НоваяСтрока[ИндексКолонки] = ТекЗначение;
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла;
		Если Результат.Количество() = МаксСтрок Тогда
			Возврат Результат;
		КонецЕсли;
		ТекСтрока = Текст.ПрочитатьСтроку();
	КонецЦикла;
	Возврат Результат;
КонецФункции

#КонецОбласти