#Область СлужебныеПроцедурыИФункции
Процедура ЗапускЗагрузкиФайла(Адрес) Экспорт  
	Результат = ОбработкаФайла(Адрес);
КонецПроцедуры

Функция ОбработкаФайла(АдресФайла) Экспорт
	
	ДанныеДокумента = ПолучитьИзВременногоХранилища(АдресФайла);
	ИмяФайла = ПолучитьИмяВременногоФайла("csv");
	ДанныеДокумента.Записать(ИмяФайла);
	ТЗ=ПрочитатьCSVвТЗ(ИмяФайла);
	ВремяНачала = ТекущаяДата();
	
	СоответствиеКодовОбработки = Новый Соответствие;
	СоответствиеКодовОбработки.Вставить("МГТ", Перечисления.ТипыГрузовыхМест.МГТ);
	СоответствиеКодовОбработки.Вставить("КГТ", Перечисления.ТипыГрузовыхМест.КГТ);
	СоответствиеКодовОбработки.Вставить("Хаб", Перечисления.ТипыГрузовыхМест.Хаб);
	СоответствиеКодовОбработки.Вставить("Шины", Перечисления.ТипыГрузовыхМест.Шины);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныТарифовОпераций.Период КАК Период,
	|	ЦеныТарифовОпераций.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныТарифовОпераций КАК ЦеныТарифовОпераций
	|ГДЕ
	|	ЦеныТарифовОпераций.ВидОперации = &ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОпераций.Хранение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТарифыХранения = Новый ТаблицаЗначений;
	ТарифыХранения.Колонки.Добавить("Сумма",				    Новый ОписаниеТипов("Число"));
	ТарифыХранения.Колонки.Добавить("ДатаНачала",				Новый ОписаниеТипов("Дата"));
	ТарифыХранения.Колонки.Добавить("ДатаОкончания",			Новый ОписаниеТипов("Дата"));
	
	ПредыдущаяДата=0;
	Индекс = -1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПредыдущаяДата<>ВыборкаДетальныеЗаписи.Период Тогда 
			Если ПредыдущаяДата=0 Тогда
				НоваяСтрока = ТарифыХранения.Добавить(); 
				НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период; 
				НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
				Индекс=Индекс+1; 
				ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;
			Иначе           
				НоваяСтрока = ТарифыХранения.Добавить();
				НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период;  
				НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
				ТарифыХранения[Индекс].ДатаОкончания = ВыборкаДетальныеЗаписи.Период; 
				Индекс=Индекс+1; 
				ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;  
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;  
	ТарифыХранения[Индекс].ДатаОкончания = Дата(2050,1,1); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныТарифовОпераций.Период КАК Период,
	|	ЦеныТарифовОпераций.Цена КАК Цена,
	|	ЦеныТарифовОпераций.ТипГрузовогоМеста КАК ТипГрузовогоМеста
	|ИЗ
	|	РегистрСведений.ЦеныТарифовОпераций КАК ЦеныТарифовОпераций
	|ГДЕ
	|	ЦеныТарифовОпераций.ВидОперации = &ВидОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ТипГрузовогоМеста
	|ИТОГИ ПО
	|	ТипГрузовогоМеста";
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОпераций.Обработка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТипаГМ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТарифыОбработки = Новый ТаблицаЗначений;
	ТарифыОбработки.Колонки.Добавить("ТипГрузовогоМеста",	    Новый ОписаниеТипов("ПеречислениеСсылка.ТипыГрузовыхМест"));  
	ТарифыОбработки.Колонки.Добавить("Сумма",				    Новый ОписаниеТипов("Число"));
	ТарифыОбработки.Колонки.Добавить("ДатаНачала",				Новый ОписаниеТипов("Дата"));
	ТарифыОбработки.Колонки.Добавить("ДатаОкончания",			Новый ОписаниеТипов("Дата"));
	
	Индекс = -1;
	Пока ВыборкаТипаГМ.Следующий() Цикл    
		ВыборкаДетальныеЗаписи = ВыборкаТипаГМ.Выбрать();    
		ПредыдущаяДата=0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			Если ПредыдущаяДата<>ВыборкаДетальныеЗаписи.Период Тогда 
				Если ПредыдущаяДата=0 Тогда
					НоваяСтрока = ТарифыОбработки.Добавить();  
					НоваяСтрока.ТипГрузовогоМеста = ВыборкаДетальныеЗаписи.ТипГрузовогоМеста; 
					НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период; 
					НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
					Индекс=Индекс+1; 
					ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;
				Иначе           
					НоваяСтрока = ТарифыОбработки.Добавить();
					НоваяСтрока.ТипГрузовогоМеста = ВыборкаДетальныеЗаписи.ТипГрузовогоМеста;
					НоваяСтрока.ДатаНачала = ВыборкаДетальныеЗаписи.Период;  
					НоваяСтрока.Сумма =  ВыборкаДетальныеЗаписи.Цена;
					ТарифыОбработки[Индекс].ДатаОкончания = ВыборкаДетальныеЗаписи.Период; 
					Индекс=Индекс+1; 
					ПредыдущаяДата=ВыборкаДетальныеЗаписи.Период;  
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;     
		ТарифыОбработки[Индекс].ДатаОкончания = Дата(2050,1,1);
	КонецЦикла;	
	
	ЧислоПотоков = 8;
	ЧислоСтрокВТаблице = ТЗ.Количество();
	РазмерПорции = Цел(ЧислоСтрокВТаблице / ЧислоПотоков);
	МассивЗаданий = Новый Массив;     
	//Для ТекСтрока = 0 По КоличествоВПакете-1 Цикл
	//			МассивСтрок.Добавить(Данные[ТекСтрока]);
	//КонецЦикла;
	//ДанныхСтрок = Данные.Скопировать(МассивСтрок);
	
	Для НомерПотока = 1 По ЧислоПотоков Цикл
		ИндексНачала = (НомерПотока - 1) * РазмерПорции;
		Если (НомерПотока = ЧислоПотоков) Тогда
			РазмерПорции = ЧислоСтрокВТаблице - (ЧислоПотоков * РазмерПорции) + РазмерПорции;
		КонецЕсли;
		// определяем массив параметров для процедуры
		НаборПараметров = Новый Массив;
		НаборПараметров.Добавить(ТЗ);
		НаборПараметров.Добавить(СоответствиеКодовОбработки);   
		НаборПараметров.Добавить(ТарифыХранения);
		НаборПараметров.Добавить(ТарифыОбработки);
		НаборПараметров.Добавить(ИндексНачала);
		НаборПараметров.Добавить(РазмерПорции);
		// запуск фонового задания
		Задание = ФоновыеЗадания.Выполнить("ОбщийМодульФоновые.ОбработкаДанных", НаборПараметров);
		// добавляем задание в массив, чтобы потом отследить выполнение
		МассивЗаданий.Добавить(Задание);
	КонецЦикла;
	// проверим результат выполнения фоновых заданий
	Если МассивЗаданий.Количество() > 0 Тогда
		Попытка
			ФоновыеЗадания.ОжидатьЗавершенияВыполнения(МассивЗаданий, 10);
		Исключение
			Возврат 1;
		КонецПопытки;
	КонецЕсли;
	Длительность = ТекущаяДата() - ВремяНачала;
	Сообщить("Длительность: " + Длительность + "сек.");
	УдалитьИзВременногоХранилища(АдресФайла);
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
	КонецПопытки;
	
	Возврат 1;
КонецФункции  

Функция ПрочитатьCSVвТЗ(ИмяФайла, Разделитель = ",") Экспорт
	КодировкаФайла 		= КодировкаТекста.UTF8;
	Результат = Новый ТаблицаЗначений;
	Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаФайла);
	
	// создадим колонки
	ТекСтрока = Текст.ПрочитатьСтроку();
	Если ТекСтрока <> Неопределено Тогда
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		Для Каждого ИмяКолонки Из МассивЗначений Цикл
			Результат.Колонки.Добавить(СтрЗаменить(ИмяКолонки, """", ""));
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла;
		ТекСтрока = Текст.ПрочитатьСтроку();
	КонецЕсли;
	
	Пока ТекСтрока <> Неопределено Цикл
		НоваяСтрока = Результат.Добавить();
		
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		Для Каждого ТекЗначение Из МассивЗначений Цикл
			НоваяСтрока[ИндексКолонки] = ТекЗначение;
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла;
		
		ТекСтрока = Текст.ПрочитатьСтроку();
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОбработкаДанных(ТЗИсходная, СоответствиеКодовОбработки, ТарифыХранения,ТарифыОбработки, ИндексНачала, РазмерПорции) Экспорт 
	НаборЗаписей = РегистрыСведений.ДанныеДляРасчета.СоздатьНаборЗаписей();
	Для Счетчик = 1 По РазмерПорции Цикл
		Индекс = ?(Счетчик = 1, ИндексНачала, Индекс + 1);
		СтрокаДанных = ТЗИсходная[Индекс];
		ЗаписьРегистра = НаборЗаписей.Добавить(); 
		ЗаписьРегистра.НомерГрузовогоМеста = СтрЗаменить(СтрокаДанных.НомерГрузовогоМеста, """", "");
		ЗаписьРегистра.ДатаВремяПрибытия = Дата(СтрЗаменить(СтрокаДанных.Дата_Прибытие, "-", "") + СтрЗаменить(
		СтрокаДанных.Время_Прибытие, ":", ""));
		ЗаписьРегистра.ДатаВремяУбытия  = Дата(СтрЗаменить(СтрокаДанных.Дата_Убытие, "-", "") + СтрЗаменить(
		СтрокаДанных.Время_Убытие, ":", ""));
		ЗаписьРегистра.КодТипаОбработки  = СоответствиеКодовОбработки.Получить(СокрЛп(СтрокаДанных.КодТипаОбработки));
		ЗаписьРегистра.КоличествоЧасов  = Цел((ЗаписьРегистра.ДатаВремяУбытия - ЗаписьРегистра.ДатаВремяПрибытия) / 3600);
		ЗаписьРегистра.КоличествоВыходныхДней  = ПолучитьКоличествоВыходныхДней(ЗаписьРегистра.ДатаВремяПрибытия, ЗаписьРегистра.ДатаВремяУбытия,
		ЗаписьРегистра.КоличествоЧасов);
		ЗаписьРегистра.КоличествоДней  = Цел(ЗаписьРегистра.КоличествоЧасов / 24);
		ЗаписьРегистра.ОбработкаВВыходнойДень = ?(ДеньНедели(ЗаписьРегистра.ДатаВремяПрибытия) > 5, 1, 0);
		ЗаписьРегистра.ЗаказКлиента  = СтрЗаменить(СтрокаДанных.ЗаказКлиента, """", "");
		ЗаписьРегистра.Стоимость     = РассчитатьСтоимость(ЗаписьРегистра.КодТипаОбработки,ТарифыХранения,ТарифыОбработки,ЗаписьРегистра.ДатаВремяПрибытия, ЗаписьРегистра.ДатаВремяУбытия,
		ЗаписьРегистра.КоличествоЧасов,ЗаписьРегистра.КоличествоВыходныхДней,ЗаписьРегистра.КоличествоДней,ЗаписьРегистра.ОбработкаВВыходнойДень);
		ЗаписьРегистра.СтоимостьСНДС = ЗаписьРегистра.Стоимость*1.2;
	КонецЦикла; 
	НаборЗаписей.Записать(Ложь); 
КонецФункции

Функция ПолучитьКоличествоВыходныхДней(Знач НачальнаяДата, Знач КонечнаяДата, Знач КоличествоЧасов) Экспорт
	НачальнаяДата = НачалоДня(НачальнаяДата);
	КонечнаяДата  = НачалоДня(КонечнаяДата);
	Если ДеньНедели(НачальнаяДата) > 5 И КоличествоЧасов < 24 Тогда
		Возврат 1;
	КонецЕсли;
	КоличествоВыходных = 0;
	КоличествоДнейРазница = Цел(КоличествоЧасов / 24) + 1;
	Пока КоличествоДнейРазница > 0 Цикл
		Если ДеньНедели(НачальнаяДата) > 5 Тогда
			КоличествоВыходных=КоличествоВыходных + 1;
		КонецЕсли;
		НачальнаяДата=НачальнаяДата + 3600 * 24;
		КоличествоДнейРазница=КоличествоДнейРазница - 1;
	КонецЦикла;
	Возврат КоличествоВыходных;
КонецФункции

Функция РассчитатьСтоимость(ТипГМ,ТарифыХранения,ТарифыОбработки,НачальнаяДата, КонечнаяДата,
	КоличествоЧасов,КоличествоВыходныхДней,КоличествоДней,ОбработкаВВыходнойДень) Экспорт   
	Стоимость = 0;  
	Если КоличествоЧасов<24 Тогда   
		СтоимостьХранения=0;
	Иначе	
		Для Каждого СтрокаТарифа Из ТарифыХранения Цикл
			Если (СтрокаТарифа.ДатаНачала<=НачальнаяДата И НачальнаяДата<=СтрокаТарифа.ДатаОкончания)
				И (СтрокаТарифа.ДатаНачала<=КонечнаяДата И КонечнаяДата<=СтрокаТарифа.ДатаОкончания) Тогда  //запись в одном периоде
				СтоимостьХранения = СтрокаТарифа.Сумма; 
				//алгоритм если период попадает в другой тариф 
			Иначе
				СтоимостьХранения=0;
			КонецЕсли;
		КонецЦикла; 
		Если КоличествоВыходныхДней>0 Тогда
			Стоимость = СтоимостьХранения * КоличествоВыходныхДней * 2;
		КонецЕсли;  
		Стоимость = Стоимость + СтоимостьХранения * (КоличествоДней - КоличествоВыходныхДней);
	КонецЕсли;  
	
	ТарифыОбработкиСтроки = ТарифыОбработки.НайтиСтроки(Новый Структура("ТипГрузовогоМеста", ТипГМ));
	
	Для Каждого СтрокаТарифа Из ТарифыОбработкиСтроки Цикл
		Если (СтрокаТарифа.ДатаНачала<=НачальнаяДата И НачальнаяДата<=СтрокаТарифа.ДатаОкончания)
			И (СтрокаТарифа.ДатаНачала<=КонечнаяДата И КонечнаяДата<=СтрокаТарифа.ДатаОкончания) Тогда  //запись в одном периоде
			СтоимостьОбработки = СтрокаТарифа.Сумма; 
			//алгоритм если период попадает в другой тариф  
		Иначе
			СтоимостьОбработки =0;
		КонецЕсли;
	КонецЦикла;
	Если ОбработкаВВыходнойДень Тогда
		Стоимость = Стоимость + СтоимостьОбработки * 2;      
	Иначе
		Стоимость = Стоимость + СтоимостьОбработки;
	КонецЕсли; 
	
	Возврат Стоимость;
КонецФункции

#КонецОбласти